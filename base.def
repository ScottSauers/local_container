Bootstrap: docker
From: ubuntu:22.04

%post
    # Use bash and set error handling
    set -e
    export DEBIAN_FRONTEND=noninteractive
    echo "tzdata tzdata/Areas select America" | debconf-set-selections
    echo "tzdata tzdata/Zones/US select Central" | debconf-set-selections
    
    # Install basic tools and dependencies
    apt-get update && apt-get upgrade -yq
    apt-get install -yq curl git build-essential tzdata software-properties-common ripgrep fd-find python3-pip nodejs npm unzip wget zlib1g-dev libbz2-dev liblzma-dev libcurl4-openssl-dev libssl-dev libncurses5-dev libopenblas-dev

    # Install bioinformatics tools
    apt-get install -yq samtools bedtools bcftools tabix
    
    # Install HTSLIB (includes bgzip)
    wget https://github.com/samtools/htslib/releases/download/1.17/htslib-1.17.tar.bz2
    tar -xjf htslib-1.17.tar.bz2
    cd htslib-1.17
    ./configure
    make
    make install
    cd ..
    rm -rf htslib-1.17 htslib-1.17.tar.bz2

    # Install latest stable Neovim
    add-apt-repository ppa:neovim-ppa/unstable -y
    apt-get update
    apt-get install -yq neovim
    
    # Install Rust
    curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    . $HOME/.cargo/env
    rustup default stable

    # Install Python and dependencies
    apt-get install -yq python3-dev
    pip3 install pynvim pandas numpy scipy matplotlib seaborn scikit-learn biopython statsmodels jupyter notebook pytest pylint flake8 black mypy snakemake

    # Install R and Bioconductor
    apt-get install -yq r-base r-base-dev
    R -e "install.packages(c('ggplot2', 'dplyr', 'tidyr', 'BiocManager'), repos='http://cran.rstudio.com/')"
    R -e "BiocManager::install(c('DESeq2', 'edgeR', 'limma'))"

    # Install Node.js dependencies
    npm install -g neovim prettier eslint typescript

    # Install Lua and development headers
    apt-get install -yq lua5.3 lua5.3-dev luarocks
    luarocks install luasocket

    # Install additional tools
    curl -sS https://webi.sh/shfmt | sh
    cargo install stylua ripgrep fd-find

    # Install lazygit
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
    curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    tar xf lazygit.tar.gz lazygit
    install lazygit /usr/local/bin
    rm lazygit lazygit.tar.gz

    # Install parallel processing tools
    apt-get install -yq parallel

    # Install image viewing tools
    apt-get install -yq imagemagick feh

    # Install additional bioinformatics tools
    apt-get install -yq emboss blast2 clustalw muscle mafft fastqc trimmomatic bowtie2 bwa
    
    # Install VCFtools
    apt-get install -yq vcftools
    
    # Install BWA
    git clone https://github.com/lh3/bwa.git
    cd bwa; make
    cp bwa /usr/local/bin/
    cd ..; rm -rf bwa

    # Set up Neovim configuration
    mkdir -p /opt/nvim/config
    mkdir -p /opt/nvim/share/nvim/site/pack/lazy/start
    mkdir -p /opt/nvim/share/nvim/mason
    mkdir -p /opt/nvim/share/nvim/lazy
    curl -fsSL https://raw.githubusercontent.com/ScottSauers/neovim_config/main/.config/nvim/init.lua -o /opt/nvim/config/init.lua
    
    # Install lazy.nvim (plugin manager)
    git clone --filter=blob:none https://github.com/folke/lazy.nvim.git --branch=stable /opt/nvim/share/nvim/site/pack/lazy/start/lazy.nvim
    
    # Install Nerd Fonts
    mkdir -p /usr/share/fonts/NerdFonts
    wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/DejaVuSansMono.zip
    unzip DejaVuSansMono.zip -d /usr/share/fonts/NerdFonts
    rm DejaVuSansMono.zip
    fc-cache -fv
    
    # Clean up
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    
    # Set up environment for all users
    echo 'export XDG_CONFIG_HOME=/opt' >> /etc/bash.bashrc
    echo 'export XDG_DATA_HOME=/opt/share' >> /etc/bash.bashrc
    echo 'export NVIM_CONFIG_DIR=/opt/nvim/config' >> /etc/bash.bashrc
    echo 'alias nvim="XDG_CONFIG_HOME=/opt XDG_DATA_HOME=/opt/share nvim -u /opt/nvim/config/init.lua"' >> /etc/bash.bashrc

    # Run initial setup for Neovim
    XDG_CONFIG_HOME=/opt XDG_DATA_HOME=/opt/share nvim --headless -u /opt/nvim/config/init.lua "+Lazy! sync" +qa
    XDG_CONFIG_HOME=/opt XDG_DATA_HOME=/opt/share nvim --headless -u /opt/nvim/config/init.lua "+MasonInstall lua-language-server rust-analyzer pyright typescript-language-server css-lsp bash-language-server clangd" +qa

    # Ensure proper permissions
    chmod -R 777 /opt/nvim

%environment
    export PATH=$PATH:$HOME/.cargo/bin:$HOME/.local/bin:/usr/local/bin
    export TERM=xterm-256color
    export XDG_CONFIG_HOME=/opt
    export XDG_DATA_HOME=/opt/share
    export NVIM_CONFIG_DIR=/opt/nvim/config
    # Unset any Flatpak-related variables to prevent unexpected paths
    unset FLATPAK_ID
    unset FLATPAK_SANDBOX_DIR
    alias nvim="XDG_CONFIG_HOME=/opt XDG_DATA_HOME=/opt/share nvim -u /opt/nvim/config/init.lua"

%runscript
    echo "Welcome to the bioinformatics environment!"
    /bin/bash

%startscript
    # Ensure proper environment variables are set
    export XDG_CONFIG_HOME=/opt
    export XDG_DATA_HOME=/opt/share
    export NVIM_CONFIG_DIR=/opt/nvim/config

    # Set up symlinks for user-specific data if they don't exist
    mkdir -p $HOME/.local/share/nvim
    [ ! -L "$HOME/.local/share/nvim/mason" ] && ln -sfn /opt/nvim/share/nvim/mason $HOME/.local/share/nvim/mason
    [ ! -L "$HOME/.local/share/nvim/lazy" ] && ln -sfn /opt/nvim/share/nvim/lazy $HOME/.local/share/nvim/lazy

    # Ensure the alias is set in the shell
    alias nvim="XDG_CONFIG_HOME=/opt XDG_DATA_HOME=/opt/share nvim -u /opt/nvim/config/init.lua"
